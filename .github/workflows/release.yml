name: Release
on:
  push:
    branches:
      - master
      - beta
      - alpha
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "latest"
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Cache Dependency
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.yarn
            ~/.cache/pnpm
            ~/cache
            !~/cache/exclude
            **/node_modules
          key: pnpm-${{ runner.os }}-${{ hashFiles('package.json') }}
          restore-keys: pnpm-${{ runner.os }}
      - run: pnpm i --frozen-lockfile
      - run: pnpm run lint
      - run: pnpm run build
      - env:
          REF_NAME: ${{ github.ref_name }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm run release
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}},priority=1100,enable=true
            type=raw,value=latest,enable=true
            type=raw,value={{date 'YYYY-MM-DD' tz='Asia/Shanghai'}},enable=true
            type=sha,format=short,prefix=sha-,enable=true
          flavor: latest=false
      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
